# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

executors:
  python_docker:
    parameters:
      python_docker_tag:
        type: string
    docker:
      - image: cimg/python:<< parameters.python_docker_tag >>
  publisher:
    docker:
      - image: cimg/python:3.10

jobs:
  test:
    parameters:
      python_docker_tag:
        type: string
    executor:
      name: python_docker
      python_docker_tag: << parameters.python_docker_tag >>
    steps:
      - run:
          name: Install poetry
          command: |
            python -m pip install --upgrade pip
            python -m pip install --upgrade poetry
            poetry config virtualenvs.in-project true

      - checkout

      - restore_cache:
          keys:
            - >
              v3
              python_artifacts
              << parameters.python_docker_tag >>
              {{ checksum "poetry.lock" }}


      - run:
          name: Install test dependencies
          command: poetry install -E pandas -E docs

      - save_cache:
          key: >
              v3
              python_artifacts
              << parameters.python_docker_tag >>
              {{ checksum "poetry.lock" }}
          paths:
            - .venv

      - run:
          name: mypy
          command: make mypy

      - run:
          name: pytest
          command: make test

  docs:
    parameters:
      python_docker_tag:
        type: string
    executor:
      name: python_docker
      python_docker_tag: << parameters.python_docker_tag >>
    steps:
      - run:
          name: Install poetry
          command: |
            python -m pip install --upgrade poetry
            poetry config virtualenvs.in-project true

      - checkout

      - restore_cache:
          keys:
            - >
              v2
              doc_python_artifacts
              << parameters.python_docker_tag >>
              {{ checksum "poetry.lock" }}

      - run:
          name: Install docs dependencies
          command: poetry install -E docs

      - save_cache:
          key: >
              v2
              doc_python_artifacts
              << parameters.python_docker_tag >>
              {{ checksum "poetry.lock" }}
          paths:
            - .venv

      - run:
          name: Build docs
          command: make docs
      
      - store_artifacts:
          path: docs/_build/html/

      - run:
          name: Run doc tests
          command: make doctest

  register:
    executor:
      name: publisher
    steps:
      - run:
          name: Install poetry
          command: |
            python -m pip install --upgrade poetry
            poetry config virtualenvs.in-project true

      - checkout

      - run:
          name: register
          command: .circleci/publish.sh

workflows:
  testAndRegister:
    jobs:
      - test:
          matrix:
            parameters:
              python_docker_tag: ["3.8", "3.9", "3.10"]
          filters:
            tags:
              only: /^v\d+\.\d+\.\d+.*$/
      - docs:
          matrix:
            parameters:
              python_docker_tag: ["3.8"] # match 3.8
          filters:
            tags:
              only: /^v\d+\.\d+\.\d+.*$/
      - register:
          requires:
            - test
            - docs
          context: Python CSQL
          filters:
            tags:
              only: /^v\d+\.\d+\.\d+.*$/
            branches:
              ignore: /.*/
